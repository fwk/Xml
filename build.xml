<?xml version="1.0" encoding="UTF-8"?>
<!-- Fwk Build Script -->
<project name="fwk" default="init" basedir=".">
    <property name="project_name">Fwk/Xml</property>

    <property name="sources_dir">${basedir}/src</property>
    <property name="target_dir">${basedir}/build</property>
    <property name="bin_dir">${basedir}/bin</property>

    <property name="phpunit.version">4.8.9</property>
    <property name="phpdoc.theme">responsive-twig</property>
    <property name="phpdoc.title">${project_name} API Documentation</property>
    <property name="phpdoc.packagename">${project_name}</property>

    <target name="test" description="Execute tests with PHPUnit" depends="clean,prepare">
        <exec dir="${basedir}" executable="${bin_dir}/phpunit-${phpunit.version}.phar" failonerror="false">
            <arg line="
             --log-junit ${target_dir}/phpunit-log.xml
              --coverage-html ${target_dir}/coverage
              --coverage-clover ${target_dir}/coverage.xml
              --testdox-html ${target_dir}/testdox.html" />
        </exec>
    </target>

    <target name="phpcs" description="Execute CodeSniffer">
        <exec dir="${sources_dir}" executable="${bin_dir}/phpcs.phar">
            <arg line="
             --report-file=${target_dir}/codesniffer.xml
              --report=checkstyle
              --ignore=*vendor*,*tests*,*Test.php,test.php
              --report-full=${target_dir}/codesniffer-full.txt
              --report-summary=${target_dir}/codesniffer-summary.txt
              --extensions=php ${sources_dir}" />
        </exec>
    </target>

    <target name="phpcs-autofix" description="Execute CodeSniffer's PHPCBF">
        <exec dir="${sources_dir}" executable="${bin_dir}/phpcbf.phar">
            <arg line="
              --ignore=*vendor*,*tests*,*Test.php,test.php
              --extensions=php ${sources_dir}" />
        </exec>
    </target>

    <target name="phpmd" description="Execute PHP-MD">
        <exec dir="${sources_dir}" executable="${bin_dir}/phpmd.phar">
            <arg line="
            . html codesize,naming,unusedcode
            --reportfile ${target_dir}/pmd.html
            --exclude vendor,tests,test.php" />
        </exec>
    </target>

    <target name="pdepend" description="Execute PDEPEND">
        <exec dir="${sources_dir}" executable="${bin_dir}/pdepend.phar">
            <arg line="--summary-xml=${target_dir}/pdepend.xml
                       --jdepend-chart=${target_dir}/pdepend-jdepend.svg
                       --overview-pyramid=${target_dir}/pdepend-pyramid.svg
                       --ignore=*vendor*,*tests*,*Test.php,test.php
                       ${sources_dir}" />
        </exec>
    </target>

    <target name="phpcpd" description="Execute Copy-Paste Detector">
        <exec dir="${sources_dir}" executable="${bin_dir}/phpcpd.phar">
            <redirector output="${target_dir}/phpcpd.txt" alwayslog="true" />
            <arg line="--log-pmd ${target_dir}/php-cpd.xml
                       --exclude vendor,tests,test.php
                       ${sources_dir}" />
        </exec>
    </target>

    <target name="init"
            description="Execute everything"
            depends="clean, prepare, test, phpmd, pdepend, phpcpd, phpcs, apidoc, apidoc-checkstyle"
    />

    <target name="install" description="Install everything needed to run tasks in this script" depends="clean-bin">
        <mkdir dir="${bin_dir}" />

        <exec description="install PHPUnit 5.0.9" dir="${bin_dir}" executable="wget">
            <arg line=" https://phar.phpunit.de/phpunit-${phpunit.version}.phar" />
        </exec>
        <exec description="install PHPCS" dir="${bin_dir}" executable="curl">
            <arg line=" -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar" />
        </exec>
        <exec description="install PHPCBF" dir="${bin_dir}" executable="curl">
            <arg line=" -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar" />
        </exec>
        <exec description="install PHPMD" dir="${bin_dir}" executable="wget">
            <arg line=" -c http://static.phpmd.org/php/latest/phpmd.phar" />
        </exec>
        <exec description="install PHP-CPD" dir="${bin_dir}" executable="wget">
            <arg line=" https://phar.phpunit.de/phpcpd.phar" />
        </exec>
        <exec description="install PDepend" dir="${bin_dir}" executable="wget">
            <arg line=" http://static.pdepend.org/php/latest/pdepend.phar" />
        </exec>
        <exec description="install PHPDocumentor" dir="${bin_dir}" executable="wget">
            <arg line=" http://www.phpdoc.org/phpDocumentor.phar" />
        </exec>
        <chmod file="${bin_dir}/*.phar" perm="+x" />
    </target>

    <target name="clean-bin" description="Clean bin/ directory">
        <delete dir="bin/*" />
        <delete dir="bin" />
    </target>

    <target name="clean" description="Clean build directory">
        <delete dir="${target_dir}/*" />
        <delete dir="${target_dir}" />
    </target>

    <target name="prepare" description="Prepare build directory">
        <mkdir dir="${target_dir}" />
        <mkdir dir="${target_dir}/coverage" />
    </target>

    <target name="release" description="Creates a clean tar release" depends="init">
        <tar destfile="${target_dir}/release.tar.gz"
             basedir="${basedir}"
             excludes="vendor/**, bin/**, build/**, **test.php, **.travis**, **build.xml, .idea/**"
             compression="gzip"
        />
        <exec dir="${target_dir}" command="md5sum">
            <redirector output="${target_dir}/release.tar.gz.md5" alwayslog="true" />
            <arg line=" release.tar.gz" />
        </exec>
    </target>

    <target name="apidoc" description="Generates the API documentation">
        <exec dir="${sources_dir}" executable="${bin_dir}/phpDocumentor.phar">
            <arg line=" -d . -t ${target_dir}/apidoc --template=${phpdoc.theme} --defaultpackagename=&quot;Fwk/Xml&quot; --title=&quot;${phpdoc.title}&quot;" />
        </exec>
        <delete includeemptydirs="true">
            <fileset dir="${target_dir}/apidoc" defaultexcludes="true" includes="**/phpdoc-cache*/**" />
        </delete>
    </target>

    <target name="apidoc-checkstyle" description="Generates the API documentation (XML+CheckStyle format)">
        <exec dir="${sources_dir}" executable="${bin_dir}/phpDocumentor.phar">
            <arg line=" -d . -t ${target_dir} --template=checkstyle" />
        </exec>
        <exec dir="${sources_dir}" executable="${bin_dir}/phpDocumentor.phar">
            <arg line=" -d . -t ${target_dir} --template=xml" />
        </exec>
        <delete includeemptydirs="true">
            <fileset dir="${target_dir}" defaultexcludes="true" includes="**/phpdoc-cache*/**" />
        </delete>
    </target>
</project>
